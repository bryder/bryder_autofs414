
ident $id$

This README describes the purpose the autofs4 patches, how to
apply them, and where to get the most up to date release of the
kernel module.

Ghosting
========

Ghosting of map directories allows you to see the directories in the
autofs map without mounting them. When they are accessed, such as when
a directory listing is requested the map entry is mounted so that it
is seen.

This feature has been implemented for file, nis and ldap maps.

For it to work an updated autofs4 kernel module is needed.

There are two ways to update the kernel module. One is to apply a
patch to your kernel source tree as described below. If you wish to
compile autofs4 into the kernel then you must use this method.
Patches for this are included in the patches directory of this
distribution.

It is also possible to build and install an autofs4 module, that
matches your kernel without also building a new kernel. To do this
you need to download the autofs4 package. This should be available
from the same location as this package.

The autofs4 patches included here were up to data at the time this
package was released. If you wish to get the latest revision of
the module the you need to use the package referred to above.


Applying The Kernel Patch
=========================

Patches that can be applied to the autofs4 kernel module are located
in the patches directory. If you have installed from an rpm then they
can be found in the packages' doc directory after install. They
consist of one for kernel version 2.4.18 and below and another for
kernel version 2.4.19 and above. The 2.2 kernel patch, also present
is for the autofs-4.0.0 and does not provide the same functionality
as the 2.4 patches.

The patch naming convention is autofs4-2.4.nn-yyyymmdd.patch.

To apply one of these patches:

1) change to the root of your kernel source tree.
2) save a copy of include/linux/auto_fs* fs/autofs4/*
3) patch the kernel
4) make the kernel

If you are compiling autofs4 into the kernel you now install the
kernel and you are done.

If you are using autofs4 as a module there are a couple of extra
steps.

5) make modules
6) save a copy of /lib/modules/<kernel version>/kernel/fs/autofs4/autofs4.o
7) copy the updated kernel module.

Like this:

cd <source_tree_base_dir> 
tar cf <backup_tar_file> include/linux/auto_fs* fs/autofs4/*
patch -p1 < <path_to_patch_directory>/autofs4-2.4.nn-yyyymmdd.patch
make modules
cp /lib/modules/<kernel version>/kernel/fs/autofs4/autofs4.o <backup_location>
cp fs/autofs4/autofs4.o /lib/modules/<kernel version>/kernel/fs/autofs4

and away you go.

To revert to the original module (if there was one) simple copy the
original autofs4.o to its proper location in the module tree from the
backup copy you made.

Make sure autofs is not running and remove your current autofs4 module
(rmmod autofs4) if it is in use before starting autofs to get the new
one.


